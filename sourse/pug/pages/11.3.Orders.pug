extends ../layout/main.pug

include ../blocks/header/_header.pug
include ../blocks/topLine/_topLine.pug
include ../blocks/top-nav/_top-nav.pug 
include ../blocks/headerBlock/_headerBlock.pug
include ../blocks/sForm/_sForm.pug
include ../blocks/sContent/_sContent.pug
 
include ../blocks/sContact/_sContact.pug
include ../blocks/sForm/_sForm.pug
include ../blocks/sForm/_sForm.pug
include ../blocks/sMailing/_sMailing.pug
include ../blocks/footer/_footer.pug

block variables
	- let  mainPage= 'main-page' 
	- let  bg= null

block title
	- let  title= '11.3 Mailing'
	title= title
block pagecontent
	+aside('true')
	+main('Все заказы', 'true', 'true', 'Заказ #1279')
		+sMailingNewsletter11-3
		
block scripts
	script(src="libs/@baseonmars/priority-nav/priority-nav.min.js") 
	script.
		
				//- let navs = document.querySelector(".js-priorityNav");
 
			//- for (const nav of navs) {
				
				// var wrapper = document.querySelector(".top-nav");
				var nav = priorityNav.init({
					mainNavWrapper: ".js-priorityNav",
					// mainnav wrapper selector (must be direct parent from mainNav)
					mainNav: ".labels",
					// mainnav selector. (must be inline-block)
					navDropdownLabel: 'Еще',
					navDropdownBreakpointLabel: 'Еще',
					navDropdownClassName: "menu__dropdown",
					// class used for the dropdown.
					navDropdownToggleClassName: "menu__dropdown-toggle",
					// class used for the dropdown toggle.
					// navDropdownBreakpointLabel: "Выбрать", //button label for navDropdownToggle when the breakPoint is reached.
					breakPoint: 0 // moved: function () { scrolldrop()}, // executed when item is moved to dropdown
					// movedBack: function () { scrolldrop()} // executed when item is moved back to main menu
				
				}); 
			//- }
		var customTemplates = new Choices(
		document.querySelector('.select-color-js'),
			{
				choices: [
				{
					value: ' Новый',
					label: ' Новый',
					customProperties: { color: '#4BB14B' }
				},
				
				{
					value: 'В работе',
					label: 'В работе',
					customProperties: { color: '#F5B04D' }
				},
				{
					value: 'В пути/готов',
					label: 'В пути/готов',
					customProperties: { color: '#6F64EC' }
				},
				{
					value: 'Выполнен',
					label: 'Выполнен',
					customProperties: { color: '#009FE3' }
				},
				{
					value: 'Отменен',
					label: 'Отменен',
					customProperties: { color: '#8C8D8F' }
				},

			],
				itemSelectText: '',
				searchEnabled: false,
			searchChoices: false,
			shouldSort: false,
				allowHTML: true,
				callbackOnCreateTemplates: function(strToEl) {
					var classNames = this.config.classNames;
					var itemSelectText = this.config.itemSelectText;
					return {
						item: function({ classNames }, data) {
							return strToEl(
								'\
						<div\
							style="--bg: ' + String(data.customProperties.color) + '"\
							class="select-color-head ' +
									String(classNames.item) +
									' ' +
									String(
										data.highlighted
											? classNames.highlightedState
											: classNames.itemSelectable
									) +
									'"\
							data-item\
							data-id="' +
									String(data.id) +
									'"\
							data-value="' +
									String(data.value) +
									'"\
							' +
									String(data.active ? 'aria-selected="true"' : '') +
									'\
							' +
									String(data.disabled ? 'aria-disabled="true"' : '') +
									'\
							>\
							' +
									String(data.label) +
									'\
						</div>\
					'
							);
						},
						choice: function({ classNames }, data) {
							return strToEl(
								'\
						<div\
							class="choise-circle' +
									String(classNames.item) +
									' ' +
									String(classNames.itemChoice) +
									' ' +
									String(
										data.disabled
											? classNames.itemDisabled
											: classNames.itemSelectable
									) +
									'"\
							data-select-text="' +
									String(itemSelectText) +
									'"\
							data-choice \
							' +
									String(
										data.disabled
											? 'data-choice-disabled aria-disabled="true"'
											: 'data-choice-selectable'
									) +
									'\
							data-id="' +
									String(data.id) +
									'"\
							data-value="' +
									String(data.value) +
									'"\
							' +
									String(
										data.groupId > 0 ? 'role="treeitem"' : 'role="option"'
									) +
									'\
							>\
							<span class="choise-circle" style=" background: ' + String(data.customProperties.color) + '"></span> ' +
									String(data.label) +
									'\
						</div>\
					'
							);
						},
					};
				},
			}
		);